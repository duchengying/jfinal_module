/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2016-12-27 06:13:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>ztree 菜单</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"ztree/css/zTreeStyle/zTreeStyle.css\">\n");
      out.write("<script src=\"ztree/js/jquery-3.1.1.min.js\"></script>\n");
      out.write("<script src=\"ztree/js/jquery.ztree.all.min.js\"></script>\n");
      out.write("<script src=\"ztree/js/jquery.ztree.core.min.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<div>\n");
      out.write("\t<ul id=\"tree\" class=\"ztree\" style=\"width:260px; overflow:auto;\"></ul>\n");
      out.write("\t<IFRAME ID=\"mainIframe\" Name=\"mainIframe\" FRAMEBORDER=0 SCROLLING=AUTO width=100%  height=600px SRC=\"main.html\"></IFRAME>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("$(document).ready(function(){\n");
      out.write("\tvar zTree;\n");
      out.write("\tvar hrefIframe;\n");
      out.write("\tvar setting = {\n");
      out.write("\t\tview: {\n");
      out.write("\t\t\tdblClickExpand: false,\n");
      out.write("\t\t\tshowLine: true,\n");
      out.write("\t\t\tselectedMulti: false\n");
      out.write("\t\t},\n");
      out.write("\t\tasync:{\n");
      out.write("\t\t\tenable:true,\n");
      out.write("\t\t\tcontentType:\"application/json\",\n");
      out.write("\t\t\tdataType:\"json\",\n");
      out.write("\t\t\turl:\"/j-web-ztree/menu\",\n");
      out.write("\t\t\ttype:\"post\"\n");
      out.write("\t\t},\n");
      out.write("\t\tdata: {\n");
      out.write("\t\t\tsimpleData: {\n");
      out.write("\t\t\t\tenable:true,\n");
      out.write("\t\t\t\tidKey: \"id\",\n");
      out.write("\t\t\t\tpIdKey: \"pId\",\n");
      out.write("\t\t\t\trootPId: \"\"\n");
      out.write("\t\t\t}\n");
      out.write("\t\t},\n");
      out.write("\t\tcallback: {\n");
      out.write("\t\t\tbeforeClick: function(treeId, treeNode) {\n");
      out.write("\t\t\t\tvar zTree = $.fn.zTree.getZTreeObj(\"tree\");\n");
      out.write("\t\t\t\tif (treeNode.isParent) {\n");
      out.write("\t\t\t\t\tzTree.expandNode(treeNode);\n");
      out.write("\t\t\t\t\treturn false;\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\threfIframe.attr(\"src\",treeNode.file + \".html\");\n");
      out.write("\t\t\t\t\treturn true;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t};\n");
      out.write("//  初始化\n");
      out.write("\tvar t = $(\"#tree\");\n");
      out.write("\tt = $.fn.zTree.init(t, setting, null);\n");
      out.write("\threfIframe = $(\"#mainIframe\");\n");
      out.write("\threfIframe.bind(\"load\", loadReady);\n");
      out.write("\tvar zTree = $.fn.zTree.getZTreeObj(\"tree\");\n");
      out.write("\tzTree.selectNode(zTree.getNodeByParam(\"id\", 101));\n");
      out.write("\t\n");
      out.write("\tfunction loadReady() {\n");
      out.write("\t\tvar bodyH = hrefIframe.contents().find(\"body\").get(0).scrollHeight,\n");
      out.write("\t\thtmlH = hrefIframe.contents().find(\"html\").get(0).scrollHeight,\n");
      out.write("\t\tmaxH = Math.max(bodyH, htmlH), minH = Math.min(bodyH, htmlH),\n");
      out.write("\t\th = hrefIframe.height() >= maxH ? minH:maxH ;\n");
      out.write("\t\tif (h < 530) h = 530;\n");
      out.write("\t\threfIframe.height(h);\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("});\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
